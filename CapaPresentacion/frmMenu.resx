<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>